# Load the required library
library(e1071)

# Step 1: Read Data
data.grades <- read.table("2020_bn_nb_data.txt", header = TRUE)

# Function to split data into training and testing sets
split_data <- function(data, train_size) {
  n <- nrow(data)
  train_indices <- sample(1:n, size = floor(train_size * n))
  train_data <- data[train_indices, ]
  test_data <- data[-train_indices, ]
  return(list(train_data = train_data, test_data = test_data))
}

# Function to train and test the naive Bayes classifier
train_and_test_nb <- function(train_data, test_data) {
  # Train naive Bayes classifier
  nb_classifier <- naiveBayes(QP ~ ., data = train_data)
  
  # Predict on test data
  predictions <- predict(nb_classifier, test_data[, -ncol(test_data)])
  
  # Calculate accuracy
  accuracy <- sum(predictions == test_data$QP) / nrow(test_data)
  
  return(accuracy)
}

# Number of iterations
num_iterations <- 20

# Store accuracies
accuracies <- numeric(num_iterations)

# Run experiments
for (i in 1:num_iterations) {
  # Split data into training and testing sets
  split <- split_data(data.grades, 0.7)
  
  # Train and test naive Bayes classifier
  accuracies[i] <- train_and_test_nb(split$train_data, split$test_data)
}

# Report results
cat("Mean accuracy:", mean(accuracies), "\n")
cat("Standard deviation of accuracy:", sd(accuracies), "\n")
